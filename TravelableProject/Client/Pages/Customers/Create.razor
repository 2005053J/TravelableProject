@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customers</h3>
<hr />
<br />

<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Guest Name: </label>
        <div>
            <InputText @bind-Value="@customer.GuestName" class="form-control" />
            <ValidationMessage For="@(() => customer.GuestName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Guest Address: </label>
        <div>
            <InputText @bind-Value="@customer.GuestAddress" class="form-control" />
            <ValidationMessage For="@(() => customer.GuestAddress)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact Number: </label>
        <div>
            <InputText @bind-Value="@customer.ContactNumber" class="form-control" />
            <ValidationMessage For="@(() => customer.ContactNumber)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email Address: </label>
        <div>
            <InputText @bind-Value="@customer.EmailAddress" class="form-control" />
            <ValidationMessage For="@(() => customer.EmailAddress)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Customer
    </button>
    <TravelableProject.Client.Components.BackToList Target="customers" />
</EditForm>

@code {
    Customer customer = new Customer();

    private IList<Payment> Payments;
    private IList<Duration> Durations;
    private IList<Room> Rooms;

    protected async override Task OnInitializedAsync()
    {
        Durations = await _client.GetFromJsonAsync<List<Duration>>($"{Endpoints.DurationsEndpoint}");
        Payments = await _client.GetFromJsonAsync<List<Payment>>($"{Endpoints.PaymentsEndpoint}");
        Rooms = await _client.GetFromJsonAsync<List<Room>>($"{Endpoints.RoomsEndpoint}");
    }

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
        _navManager.NavigateTo("/customers/");
    }

}
