@page "/rooms/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Rooms</h3>
<hr />
<br />

<EditForm Model="@room" OnValidSubmit="CreateRoom">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Type: </label>
        <div>
            <InputText @bind-Value="@room.Type" class="form-control" />
            <ValidationMessage For="@(() => room.Type)" />
        </div>
    </div>

<button type="submit" class="btn btn-success btn-block">
    Create Room
</button>
<TravelableProject.Client.Components.BackToList Target="rooms" />
</EditForm>

@code {
    Room room = new Room();

    private IList<Payment> Payments;
    private IList<Room> Rooms;
    private IList<Duration> Durations;

    protected async override Task OnInitializedAsync()
    {
        Rooms = await _client.GetFromJsonAsync<List<Room>>($"{Endpoints.RoomsEndpoint}");
        Payments = await _client.GetFromJsonAsync<List<Payment>>($"{Endpoints.PaymentsEndpoint}");
        Durations = await _client.GetFromJsonAsync<List<Duration>>($"{Endpoints.DurationsEndpoint}");
    }

    private async Task CreateRoom()
    {
        await _client.PostAsJsonAsync(Endpoints.RoomsEndpoint, room);
        _navManager.NavigateTo("/rooms/");
    }

}
